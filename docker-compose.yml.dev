version: '3.7'

x-network:
  &network
  networks:
    - your_network

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

services:
  traefik:
    image: traefik:latest
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    <<: *network

  php:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    environment:
      - APP_ENV=${APP_ENV}
      - DOMAIN=${HTTP_OR_SSL}${DOMAIN_NAME}
      - TRUSTED_HOSTS=^(((${SUBDOMAINS_LIST}\.)?${DOMAIN_NAME})|api|ssr)$$
      - CORS_ALLOW_ORIGIN=^((${HTTP_OR_SSL}(${SUBDOMAINS_LIST}.)?${DOMAIN_NAME})|${LOCALHOST_APP}|api-cheatuniverse|ssr)$$
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASS}@db/${DB_NAME}
      - JWT_PASSPHRASE=${JWT_KEY}
      - BASE_URL=${HTTP_OR_SSL}${DOMAIN_NAME}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - traefik
      - db
    volumes:
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini:/usr/local/etc/php/conf.d/api-platform.ini
    <<: *network

  api:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro
    expose:
      - 80
    labels:
      - traefik.http.routers.api-cheatuniverse.rule=Host(`api.${DOMAIN_NAME}`)
    <<: *network

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
    <<: *network

  client:
    build:
      context: ./client
    volumes:
      - ./client:/opt/app
    labels:
      - traefik.http.routers.client-cheatuniverse.rule=Host(`${DOMAIN_NAME}`)
      - traefik.http.services.client-cheatuniverse.loadbalancer.server.port=3000
    <<: *network

volumes:
  db-data: {}

networks:
  your_network:
    external: true
